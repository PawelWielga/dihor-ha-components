var n="/* Style variables for dihor cards */\n.dihor-theme-light {\n  --dihor-card-bg: rgba(255, 255, 255, 0.95);\n  --dihor-card-border-size: 1px;\n  --dihor-card-border-radius: 12px;\n  --dihor-card-border-color: rgba(255, 255, 255, 0.2);\n  --dihor-card-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);\n\n  --dihor-title-color: #1d1d1f;\n  --dihor-subtitle-color: #666;\n  --dihor-stat-bg: rgba(200, 200, 200, 0.2);\n\n  --dihor-badge-online-bg: #4caf50;\n  --dihor-badge-offline-bg: #ff3b30;\n  --dihor-badge-players-bg: #9c27b0;\n  --dihor-badge-version-bg: #007aff;\n  --dihor-badge-latency-bg: #ff9500;\n\n  --dihor-divider-color: rgba(0, 0, 0, 0.08);\n}\n\n.dihor-theme-dark {\n  --dihor-card-bg: rgba(48, 48, 48, 0.95);\n  --dihor-card-border-size: 1px;\n  --dihor-card-border-radius: 12px;\n  --dihor-card-border-color: rgba(255, 255, 255, 0.1);\n  --dihor-card-shadow: 0 15px 35px rgba(0, 0, 0, 0.5);\n\n  --dihor-title-color: #f3f3f3;\n  --dihor-subtitle-color: #aaa;\n  --dihor-stat-bg: rgba(80, 80, 80, 0.5);\n\n  --dihor-badge-online-bg: #4caf50;\n  --dihor-badge-offline-bg: #ff3b30;\n  --dihor-badge-players-bg: #9c27b0;\n  --dihor-badge-version-bg: #007aff;\n  --dihor-badge-latency-bg: #ff9500;\n\n  --dihor-divider-color: rgba(255, 255, 255, 0.1);\n}\n";class r extends HTMLElement{constructor(){super(...arguments),this._contentCreated=!1}setConfig(n){if(!n.entity)throw new Error("Entity is required");this._config=n}set hass(r){var e;this._hass=r;const i=r.states[this._config.entity];if(!i)return;const t=i.attributes.friendly_name||this._config.entity,d=i.attributes.entity_picture;if(this._contentCreated){const n=this.querySelector("ha-card");n&&n.setAttribute("header",t)}else this.innerHTML=`\n        <style>${n}</style>\n        <ha-card header="${t}">\n          <div class="card-content">\n            <img style="width:100%;border-radius:50%" />\n          </div>\n        </ha-card>\n      `,this._contentCreated=!0;const o=this.querySelector("ha-card"),a=null===(e=r.themes)||void 0===e?void 0:e.darkMode;o&&(o.classList.toggle("dihor-theme-dark",!!a),o.classList.toggle("dihor-theme-light",!a));const s=this.querySelector("img");s&&d&&(s.setAttribute("src",d),s.setAttribute("alt",t))}getCardSize(){return 1}}customElements.get("dihor-person-card")||customElements.define("dihor-person-card",r);class e extends HTMLElement{constructor(){super(...arguments),this._contentCreated=!1}setConfig(n){if(!n.entity_prefix)throw new Error("entity_prefix is required");(n.entity_prefix.startsWith("sensor.")||n.entity_prefix.startsWith("binary_sensor."))&&console.warn('[dihor-minecraft-card] entity_prefix should not include "sensor." or "binary_sensor."'),this._config=n}set hass(r){var e;this._hass=r;const i=this._config.entity_prefix,t=n=>{var e,t,d,o,a,s;return null!==(s=null!==(o=null!==(t=null===(e=r.states[`${i}${n}`])||void 0===e?void 0:e.state)&&void 0!==t?t:null===(d=r.states[`sensor.${i}${n}`])||void 0===d?void 0:d.state)&&void 0!==o?o:null===(a=r.states[`binary_sensor.${i}${n}`])||void 0===a?void 0:a.state)&&void 0!==s?s:"unavailable"};this._contentCreated||(this.innerHTML=`\n        <style>${n}</style>\n        <ha-card>\n          <div class="dihor-card">\n  <div class="dihor-card-header">\n    <div class="dihor-header-row">\n      <h1 class="dihor-card-title">My Minecraft Server</h1>\n      <span id="version" class="dihor-badge dihor-badge-version">0.0.0</span>\n    </div>\n    <div id="motd" class="dihor-card-subtitle">message of the day</div>\n  </div>\n\n  <ul class="dihor-grid-3">\n    <li class="dihor-stat">\n      <div class="dihor-stat-icon">üîå</div>\n      <div class="dihor-stat-label">Status</div>\n      <div class="dihor-stat-value">\n        <span id="status" class="dihor-badge dihor-badge-offline">Offline</span>\n      </div>\n    </li>\n\n    <li class="dihor-stat">\n      <div class="dihor-stat-icon">üë•</div>\n      <div class="dihor-stat-label">Players</div>\n      <div class="dihor-stat-value">\n        <span id="players" class="dihor-badge dihor-badge-players">0/0</span>\n      </div>\n    </li>\n\n    <li class="dihor-stat">\n      <div class="dihor-stat-icon">‚ö°</div>\n      <div class="dihor-stat-label">Ping</div>\n      <div class="dihor-stat-value">\n        <span id="latency" class="dihor-badge dihor-badge-latency">0</span>\n      </div>\n    </li>\n  </ul>\n</div>\n\n          <style>/* KARTA */\n.dihor-card {\n  margin: 0;\n  background: var(--dihor-card-bg);\n  backdrop-filter: blur(20px);\n  border-radius: var(--dihor-card-border-radius);\n  padding: 18px;\n  box-shadow: var(--dihor-card-shadow);\n  border: var(--dihor-card-border-size) solid var(--dihor-card-border-color);\n  font-family: sans-serif;\n}\n\n/* NAG≈Å√ìWEK */\n.dihor-card-header {\n  margin-bottom: 16px;\n  padding-bottom: 12px;\n  border-bottom: 1px solid var(--dihor-divider-color);\n}\n\n.dihor-header-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 4px;\n}\n\n.dihor-card-title {\n  font-size: 20px;\n  font-weight: 700;\n  color: var(--dihor-title-color);\n  margin: 0;\n}\n\n.dihor-card-subtitle {\n  font-size: 14px;\n  color: var(--dihor-subtitle-color);\n  font-weight: 500;\n}\n\n/* SIATKA STATYSTYK */\n.dihor-grid-3 {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: 12px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n/* POJEDYNCZA STATYSTYKA */\n.dihor-stat {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px 0;\n  background: var(--dihor-stat-bg);\n  border-radius: var(--dihor-card-border-radius);\n  text-align: center;\n}\n\n.dihor-stat-icon {\n  font-size: 18px;\n}\n\n.dihor-stat-label {\n  font-size: 11px;\n  color: var(--dihor-subtitle-color);\n  font-weight: 500;\n  margin-bottom: 4px;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.dihor-stat-value {\n  font-size: 14px;\n  color: var(--dihor-title-color);\n  font-weight: 600;\n  line-height: 1.2;\n}\n\n/* BADGES */\n.dihor-badge {\n  font-size: 12px;\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-weight: 600;\n  color: white;\n}\n\n.dihor-badge-online {\n  background: var(--dihor-badge-online-bg);\n}\n\n.dihor-badge-offline {\n  background: var(--dihor-badge-offline-bg);\n}\n\n.dihor-badge-players {\n  background: var(--dihor-badge-players-bg);\n}\n\n.dihor-badge-version {\n  background: var(--dihor-badge-version-bg);\n}\n\n.dihor-badge-latency {\n  background: var(--dihor-badge-latency-bg);\n}</style>\n        </ha-card>\n      `,this._contentCreated=!0);const d=this.querySelector("ha-card"),o=null===(e=r.themes)||void 0===e?void 0:e.darkMode;d&&(d.classList.toggle("dihor-theme-dark",!!o),d.classList.toggle("dihor-theme-light",!o));const a=(n,r)=>{const e=this.querySelector(`#${n}`);e&&(e.textContent=r)},s=t("_status").toLowerCase(),l="unavailable"===s||"offline"===s||"0"===s,h=l?"":t("_world_message"),c=l?"0.0.0":t("_version"),g=l?"0":t("_players_online"),b=l?"0":t("_players_max"),v=(l?"0":t("_latency")).split(".")[0];a("motd",h),a("version",c),a("status",l?"Offline":"Online"),a("players",`${g} / ${b}`),a("latency",v);const u=this.querySelector("#status");u&&(u.className="dihor-badge "+(l?"dihor-badge-offline":"dihor-badge-online"))}getCardSize(){return 1}}customElements.get("dihor-minecraft-card")||customElements.define("dihor-minecraft-card",e);class i extends HTMLElement{constructor(){super(...arguments),this._config={},this._contentCreated=!1}setConfig(n){this._config=n}connectedCallback(){this.startClock()}disconnectedCallback(){this._interval&&window.clearInterval(this._interval)}set hass(r){var e;this._hass=r,this._contentCreated||(this.innerHTML=`\n        <style>${n}</style>\n        <ha-card>\n          <div class="dihor-clock-wrapper">\n  <div class="dihor-clock">\n    <div class="dihor-clock-face">\n      <div class="dihor-hand dihor-hand-hour" id="hour"></div>\n      <div class="dihor-hand dihor-hand-minute" id="minute"></div>\n      <div class="dihor-hand dihor-hand-second" id="second"></div>\n    </div>\n  </div>\n</div>\n\n          <style>.dihor-clock-wrapper {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem 0;\n}\n\n.dihor-clock {\n  position: relative;\n  width: 100%;\n  max-width: 200px;\n  padding-top: 100%;\n}\n\n.dihor-clock-face {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border-radius: 50%;\n  background: var(--dihor-card-bg);\n  border: 2px solid var(--dihor-divider-color);\n}\n\n.dihor-hand {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform-origin: 100% 50%;\n  transform: rotate(90deg);\n  background: var(--dihor-title-color);\n}\n\n.dihor-hand-hour {\n  width: 35%;\n  height: 4px;\n}\n\n.dihor-hand-minute {\n  width: 45%;\n  height: 3px;\n}\n\n.dihor-hand-second {\n  width: 48%;\n  height: 2px;\n  background: #ff3b30;\n}\n</style>\n        </ha-card>\n      `,this._contentCreated=!0,this.startClock());const i=this.querySelector("ha-card"),t=null===(e=r.themes)||void 0===e?void 0:e.darkMode;i&&(i.classList.toggle("dihor-theme-dark",!!t),i.classList.toggle("dihor-theme-light",!t))}startClock(){this.updateHands(),this._interval&&window.clearInterval(this._interval),this._interval=window.setInterval(()=>this.updateHands(),1e3)}updateHands(){const n=new Date,r=n.getSeconds(),e=n.getMinutes(),i=6*r,t=6*e+.1*r,d=30*(n.getHours()%12)+.5*e,o=this.querySelector("#hour"),a=this.querySelector("#minute"),s=this.querySelector("#second");o&&(o.style.transform=`rotate(${d}deg)`),a&&(a.style.transform=`rotate(${t}deg)`),s&&(s.style.transform=`rotate(${i}deg)`)}getCardSize(){var n;return null!==(n=this._config.size)&&void 0!==n?n:2}}customElements.get("dihor-clock-card")||customElements.define("dihor-clock-card",i);
