class r extends HTMLElement{constructor(){super(...arguments),this._contentCreated=!1}setConfig(r){if(!r.entity)throw new Error("Entity is required");this._config=r}set hass(r){this._hass=r;const n=r.states[this._config.entity];if(!n)return;const t=n.attributes.friendly_name||this._config.entity,e=n.attributes.entity_picture;if(this._contentCreated){const r=this.querySelector("ha-card");r&&r.setAttribute("header",t)}else this.innerHTML=`\n        <ha-card header="${t}">\n          <div class="card-content">\n            <img style="width:100%;border-radius:50%" />\n          </div>\n        </ha-card>\n      `,this._contentCreated=!0;const s=this.querySelector("img");s&&e&&(s.setAttribute("src",e),s.setAttribute("alt",t))}getCardSize(){return 1}}customElements.get("dihor-person-card")||customElements.define("dihor-person-card",r);class n extends HTMLElement{constructor(){super(...arguments),this._contentCreated=!1}setConfig(r){if(!r.entity_prefix)throw new Error("entity_prefix is required");(r.entity_prefix.startsWith("sensor.")||r.entity_prefix.startsWith("binary_sensor."))&&console.warn('[dihor-minecraft-card] entity_prefix should not include "sensor." or "binary_sensor."'),this._config=r}set hass(r){this._hass=r;const n=this._config.entity_prefix,t=t=>{var e,s,a,i,o,d;return null!==(d=null!==(i=null!==(s=null===(e=r.states[`${n}${t}`])||void 0===e?void 0:e.state)&&void 0!==s?s:null===(a=r.states[`sensor.${n}${t}`])||void 0===a?void 0:a.state)&&void 0!==i?i:null===(o=r.states[`binary_sensor.${n}${t}`])||void 0===o?void 0:o.state)&&void 0!==d?d:"N/A"};this._contentCreated||(this.innerHTML='\n        <ha-card class="minecraft-card">\n          <div class="header">\r\n  <div class="header-row">\r\n    <h1>Minecraft Server</h1>\r\n    <span class="version-badge">?</span>\r\n  </div>\r\n  <div class="motd">?</div>\r\n</div>\r\n\r\n<ul class="stats-grid">\r\n  <li class="stat-item">\r\n    <div class="stat-icon">ðŸ”Œ</div>\r\n    <div class="stat-label">Status</div>\r\n    <div class="stat-value">\r\n      <span class="status-badge online">?</span>\r\n    </div>\r\n  </li>\r\n\r\n  <li class="stat-item players">\r\n    <div class="stat-icon">ðŸ‘¥</div>\r\n    <div class="stat-label">Gracze</div>\r\n    <div class="stat-value">\r\n      <span class="players-badge">?/?</span>\r\n    </div>\r\n  </li>\r\n\r\n  <li class="stat-item">\r\n    <div class="stat-icon">âš¡</div>\r\n    <div class="stat-label">Ping</div>\r\n    <div class="stat-value">\r\n      <span class="latency-badge">?</span>\r\n    </div>\r\n  </li>\r\n</ul>\r\n\n          <style>.minecraft-card {\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(20px);\r\n  border-radius: 16px;\r\n  padding: 18px;\r\n  width: 100%;\r\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.header {\r\n  margin-bottom: 16px;\r\n  padding-bottom: 12px;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n.header-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.header h1 {\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: #1d1d1f;\r\n}\r\n\r\n.motd {\r\n  font-size: 14px;\r\n  color: #666;\r\n  font-weight: 500;\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  gap: 12px;\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 12px 8px;\r\n  background: rgba(248, 248, 248, 0.8);\r\n  border-radius: 12px;\r\n  text-align: center;\r\n}\r\n\r\n.stat-item.players {\r\n  background: rgba(248, 248, 248, 0.8);\r\n}\r\n\r\n.stat-icon {\r\n  font-size: 18px;\r\n  margin-bottom: 6px;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 11px;\r\n  color: #666;\r\n  font-weight: 500;\r\n  margin-bottom: 4px;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 14px;\r\n  color: #1d1d1f;\r\n  font-weight: 600;\r\n  line-height: 1.2;\r\n}\r\n\r\n.stat-value .status-badge,\r\n.stat-value .players-badge,\r\n.stat-value .latency-badge,\r\n.stat-value .version-badge {\r\n  color: white;\r\n}\r\n\r\n.status-online {\r\n  color: #4caf50;\r\n}\r\n\r\n.status-offline {\r\n  color: #ff3b30;\r\n}\r\n\r\n.players-badge {\r\n  background: #9c27b0;\r\n  color: white;\r\n  font-size: 12px;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-weight: 600;\r\n}\r\n\r\n.version-badge {\r\n  background: #007aff;\r\n  color: white;\r\n  font-size: 12px;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-weight: 600;\r\n}\r\n\r\n.latency-badge {\r\n  background: #ff9500;\r\n  color: white;\r\n  font-size: 12px;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-weight: 600;\r\n}\r\n</style>\n        </ha-card>\n      ',this._contentCreated=!0);const e=(r,n)=>{const t=this.querySelector(`#${r}`);t&&(t.textContent=n)},s=t("_status"),a=t("_latency");e("motd",t("_world_message")),e("version",t("_version")),e("status",s),e("protocol",t("_protocol_version")),e("players",`${t("_players_online")} / ${t("_players_max")}`),e("latency",a);const i=this.querySelector("#status");i&&(i.className="stat-value "+(s.toLowerCase().includes("offline")?"status-offline":"status-online"))}getCardSize(){return 1}}customElements.get("dihor-minecraft-card")||customElements.define("dihor-minecraft-card",n);
